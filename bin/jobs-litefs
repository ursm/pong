#!/usr/bin/env ruby

require "json"
require "logger"
require "net/http"

class Worker
  def initialize(logger:)
    @logger = logger
    @pid    = nil
  end

  def start
    return if @pid

    @logger.info "Starting bin/jobs"

    @pid = spawn("bin/jobs", out: $stdout, err: $stderr)
  end

  def stop
    return unless @pid

    @logger.info "Stopping bin/jobs"

    begin
      Process.kill :TERM, @pid
      Process.waitpid @pid
    rescue Errno::ESRCH, Errno::ECHILD
      # already terminated
    ensure
      @pid = nil
    end
  end
end

logger = Logger.new($stdout)
worker = Worker.new(logger:)

Net::HTTP.start "localhost", 20202 do |http|
  http.request_get "/events" do |res|
    buffer = +""

    res.read_body do |chunk|
      buffer << chunk

      while line = buffer.slice!(/.*\n/)&.chomp
        next if line.empty?

        case JSON.parse(line, symbolize_names: true)
        in { type: "init" | "primaryChange", data: { isPrimary: is_primary, ** }, ** }
          if is_primary
            worker.start
          else
            worker.stop
          end
        else
          # do nothing
        end
      end
    end
  end
end
